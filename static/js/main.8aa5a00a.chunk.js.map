{"version":3,"sources":["components/assets/Resume.pdf","components/Intro.js","components/About.js","components/WorkItem.js","components/Work.js","components/Contact.js","components/NavbarElements.js","components/navbar.js","components/App.js","components/darkMode.js","serviceWorker.js","index.js"],"names":["module","exports","Intro","className","About","id","class","href","Resume","rel","target","WorkItem","props","useState","collapse","setCollapse","title","subtitle","type","data-toggle","data-target","aria-expanded","aria-controls","onClick","description","link","tech","map","item","index","key","Work","Contact","Nav","styled","nav","NavLink","Link","Bars","FaBars","NavMenu","div","NavBtn","Navbar","to","activeStyle","App","btn","document","querySelector","prefersDarkScheme","window","matchMedia","currentTheme","localStorage","getItem","body","classList","toggle","innerHTML","addEventListener","theme","matches","contains","setItem","toggleDarkMode","path","component","Component","Boolean","location","hostname","match","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"0FAAAA,EAAOC,QAAU,IAA0B,oC,kMCc5BC,G,MAZD,WACZ,OACE,6BAASC,UAAU,uCACjB,yBAAKA,UAAU,SACb,wBAAIA,UAAU,gCAAd,gBACA,wBAAIA,UAAU,YAAd,0CACA,wBAAIA,UAAU,YAAd,gE,iBCiGOC,EAtGD,WACZ,OACE,6BAASC,GAAG,QAAQF,UAAU,uCAC5B,yBAAKA,UAAU,SACb,yBAAKA,UAAU,OACb,yBAAKA,UAAU,qBACb,wBAAIA,UAAU,mCACZ,uBAAGG,MAAM,2BADX,aAIA,4BACE,sCACA,mCACA,sCACA,mCACA,oCACA,+CACA,kDACA,gDAGF,wBAAIH,UAAU,mCACZ,uBAAGG,MAAM,8BADX,yBAIA,4BACE,mEACA,kEACA,gEACA,6EAGF,wBAAIH,UAAU,mCACZ,uBAAGG,MAAM,wBADX,8BAIA,4BACE,4CACA,sDACA,qCACA,mCACA,mCACA,qCACA,0CAIJ,yBAAKH,UAAU,SACb,wBAAIA,UAAU,gCAAd,kBAGA,qDACyB,uBAAGI,KAAK,8BAAR,gCADzB,0BAEa,uBAAGA,KAAK,2BAAR,qBAFb,8lBAUA,8kBAM+C,uBAAGA,KAAK,mDAAR,oCAN/C,6KASE,uBAAGA,KAAK,0DAAR,kCATF,2FAYA,4uBASA,wJAEiC,uBAAGA,KAAK,uCAAR,sBAFjC,0JAMA,0BAAMJ,UAAU,UACd,uBAAGA,UAAU,sCAAsCI,KAAMC,IACvDC,IAAI,sBAAsBC,OAAO,UADnC,UAGS,uBAAGJ,MAAM,+B,QC5CjBK,EAjDE,SAACC,GAAW,IAAD,EACMC,oBAAS,GADf,mBACnBC,EADmB,KACTC,EADS,KAG1B,OACE,yBAAKZ,UAAU,cACb,wBAAIA,UAAU,SAASS,EAAMI,OAC7B,wBAAIb,UAAU,YAAYS,EAAMK,UAChC,4BAAQd,UAAU,yBAAyBe,KAAK,SAASC,cAAY,WACnEC,cAAA,WAAiBR,EAAMP,IAAMgB,gBAAc,QAC3CC,gBAAeV,EAAMP,GAAIkB,QAAS,kBAAMR,GAAaD,IACrDE,MAAM,aAEJF,GACA,kBAAC,WAAD,kBACY,uBAAGR,MAAM,yBAGpBQ,GACD,kBAAC,WAAD,kBACY,uBAAGR,MAAM,uBAIzB,yBAAKD,GAAIO,EAAMP,GAAIF,UAAU,iBAC3B,uBAAGA,UAAU,oBACVS,EAAMY,aAGPZ,EAAMa,MACN,0BAAMtB,UAAU,UACd,uBAAGA,UAAU,sCAAsCI,KAAMK,EAAMa,KAC7DhB,IAAI,sBAAsBC,OAAO,UADnC,eAGc,uBAAGJ,MAAM,0BAI3B,yBAAKH,UAAU,mDAEZS,EAAMc,KAAKC,KAAI,SAACC,EAAMC,GACrB,OACE,uBAAIC,IAAKD,EAAO1B,UAAU,iBAAiByB,UCgF1CG,EAxHF,WACX,OACE,6BAAS1B,GAAG,OAAOF,UAAU,uCAC3B,yBAAKA,UAAU,SACb,wBAAIA,UAAU,gCAAd,8BAGA,yBAAKA,UAAU,QAEf,yBAAKA,UAAU,YACb,kBAAC,EAAD,CACEa,MAAO,iCACPC,SAAU,mFACVZ,GAAI,OACJmB,YAAa,orDAabE,KAAM,CAAC,SAAU,MAAO,sBAAuB,mBAAoB,OAAQ,eAAgB,sBAE7F,kBAAC,EAAD,CACEV,MAAO,wCACPC,SAAU,kFACVZ,GAAI,SACJmB,YAAa,koCAWbE,KAAM,CAAC,SAAU,eAAgB,WAAY,gBAAiB,UAEhE,kBAAC,EAAD,CACEV,MAAO,sCACPC,SAAU,yEACVZ,GAAI,MACJmB,YAAa,ixBAObE,KAAM,CAAC,QAAS,mBAAoB,qBAAsB,UAE5D,kBAAC,EAAD,CACEV,MAAO,iDACPC,SAAU,4DACVZ,GAAI,aACJmB,YAAa,ggDAebE,KAAM,CAAC,UAAW,UAAW,gBAAiB,cAAe,SAAU,qBAAsB,gBAAiB,UAEhH,kBAAC,EAAD,CACEV,MAAO,gCACPC,SAAU,+CACVZ,GAAI,SACJmB,YAAa,w2BAQbE,KAAM,CAAC,MAAO,QAAS,OAAQ,2BAA4B,uBAAwB,SAAU,MAAO,cAEtG,kBAAC,EAAD,CACEV,MAAO,mBACPC,SAAU,mBACVZ,GAAI,UACJmB,YAAa,2oBAMbE,KAAM,CAAC,aAAc,SAAU,UAGnC,0BAAMvB,UAAU,UACd,uBAAGA,UAAU,sCACXI,KAAK,6BAA6BE,IAAI,sBACtCC,OAAO,UAFT,mBAIkB,uBAAGJ,MAAM,6BCxEtB0B,EAxCC,WACd,OACE,6BAAS3B,GAAG,UAAUF,UAAU,uCAC9B,yBAAKA,UAAU,qBACb,wBAAIA,UAAU,mBACZ,0BAAMA,UAAU,gBAAhB,eAEF,wBAAIA,UAAU,YAAd,gEAGA,yBAAKA,UAAU,gCACb,yBAAKA,UAAU,OACb,uBAAGI,KAAK,4CACLE,IAAI,sBACLN,UAAU,MAFZ,aAOF,yBAAKA,UAAU,OACb,uBAAGI,KAAK,0BAA0BJ,UAAU,MAA5C,UAEF,yBAAKA,UAAU,OACb,uBAAGI,KAAMC,IAAQL,UAAU,KACzBa,MAAM,uBADR,WAMF,yBAAKb,UAAU,OACb,uBAAGI,KAAK,4DAA4DJ,UAAU,MAA9E,wB,22DC7BL,IAAM8B,EAAMC,IAAOC,IAAV,KAWHC,EAAUF,YAAOG,IAAPH,CAAH,KAaPI,EAAOJ,YAAOK,IAAPL,CAAH,KAcJM,EAAUN,IAAOO,IAAV,KAcPC,EAASR,IAAOC,IAAV,KCjBJQ,GD6BWT,YAAOG,IAAPH,CAAH,KC3DR,WACb,OACE,oCACE,kBAACD,EAAD,KACE,kBAACK,EAAD,MACA,kBAACI,EAAD,KACA,4BAAQvC,UAAU,iBAAiBe,KAAK,SAChCF,MAAM,oBACZ,uBAAGb,UAAU,iCAGf,kBAACqC,EAAD,KACE,kBAACJ,EAAD,CAASQ,GAAG,SAASC,aAAW,GAAhC,SAGA,kBAACT,EAAD,CAASQ,GAAG,SAASC,aAAW,GAAhC,SAGA,kBAACT,EAAD,CAASQ,GAAG,QAAQC,aAAW,GAA/B,mBAGA,kBAACT,EAAD,CAASQ,GAAG,WAAWC,aAAW,GAAlC,gB,WCnBWC,E,mLCXN,WACb,IAAMC,EAAMC,SAASC,cAAc,eAC7BC,EAAoBC,OAAOC,WAAW,gCAEtCC,EAAeC,aAAaC,QAAQ,SACrB,SAAjBF,GACFL,SAASQ,KAAKC,UAAUC,OAAO,cAC/BX,EAAIY,UAAY,6BACU,UAAjBN,IACTL,SAASQ,KAAKC,UAAUC,OAAO,eAC/BX,EAAIY,UAAY,8CAGlBZ,EAAIa,iBAAiB,SAAS,WAC5B,IAAIC,EAAQ,GACRX,EAAkBY,SACpBd,SAASQ,KAAKC,UAAUC,OAAO,eAC/BG,EAAQb,SAASQ,KAAKC,UAAUM,SAAS,eACrC,QACA,SAEJf,SAASQ,KAAKC,UAAUC,OAAO,cAC/BG,EAAQb,SAASQ,KAAKC,UAAUM,SAAS,cACrC,OACA,SAEgB,+CAAlBhB,EAAIY,UACNZ,EAAIY,UAAY,4BAEhBZ,EAAIY,UAAY,6CAElBL,aAAaU,QAAQ,QAASH,MDlB9BI,K,+BAIA,OACU,kBAAC,IAAD,KACE,kBAAC,EAAD,MACA,kBAAC,IAAD,KAEI,kBAAC,IAAD,CAAOC,KAAK,SAASC,UAAWjE,IAChC,kBAAC,IAAD,CAAOgE,KAAK,SAASC,UAAW/D,IAChC,kBAAC,IAAD,CAAO8D,KAAK,QAAQC,UAAWpC,IAC/B,kBAAC,IAAD,CAAOmC,KAAK,WAAWC,UAAWnC,U,GAdrBoC,aECbC,QACW,cAA7BlB,OAAOmB,SAASC,UAEe,UAA7BpB,OAAOmB,SAASC,UAEhBpB,OAAOmB,SAASC,SAASC,MACvB,2DCZNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEF3B,SAAS4B,eAAe,SDyHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAME,c","file":"static/js/main.8aa5a00a.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/Resume.854c5b70.pdf\";","import React from 'react';\r\n\r\nconst Intro = () => {\r\n  return (\r\n    <section className='container d-flex align-items-center'>\r\n      <div className='w-100'>\r\n        <h1 className='title title-accent display-2'>Jacob Caurdy</h1>\r\n        <h1 className='subtitle'> Computer Science Engineering Student </h1>\r\n        <h1 className='subtitle'>Focused on Machine Learning and Artificial Intelligence </h1>\r\n      </div>\r\n    </section>\r\n  );\r\n}\r\n\r\nexport default Intro;","import React from 'react';\r\nimport Resume from './assets/Resume.pdf';\r\n\r\nconst About = () => {\r\n  return (\r\n    <section id='About' className='container d-flex align-items-center'>\r\n      <div className='w-100'>\r\n        <div className='row'>\r\n          <div className='col-4 text-second'>\r\n            <h4 className='title d-flex align-items-center'>\r\n              <i class=\"bi bi-code-square me-2\"></i>\r\n              Languages\r\n            </h4>\r\n            <ul>\r\n              <li>Python</li>\r\n              <li>C++</li>\r\n              <li>MATLAB</li>\r\n              <li>SQL</li>\r\n              <li>HTML</li>\r\n              <li>CSS (Bootstrap)</li>\r\n              <li>JavaScript (React)</li>\r\n              <li>Spanish (Sorta)</li>\r\n            </ul>\r\n\r\n            <h4 className='title d-flex align-items-center'>\r\n              <i class=\"bi bi-clipboard-data me-2\"></i>\r\n              Python Data Analytics\r\n            </h4>\r\n            <ul>\r\n              <li>Preprocessing (Pandas, NLTK, Spacy)</li>\r\n              <li>Modeling (Keras, Sklearn, PyTorch)</li>\r\n              <li>Visualization (Matplotlib, Dash)</li>\r\n              <li>NLP (Transformers/BERT, Text classification)</li>\r\n            </ul>\r\n\r\n            <h4 className='title d-flex align-items-center'>\r\n              <i class=\"bi bi-terminal me-2\"></i>\r\n              Technologies, Skills, Etc.\r\n            </h4>\r\n            <ul>\r\n              <li>Azure DevOps</li>\r\n              <li>Azure Machine Learning</li>\r\n              <li>Agile</li>\r\n              <li>Git</li>\r\n              <li>GDB</li>\r\n              <li>Linux</li>\r\n              <li>CLI/Bash</li>\r\n            </ul>\r\n          </div>\r\n        \r\n          <div className='col-8'>\r\n            <h1 className='title title-accent display-5'>\r\n              Hey, I'm Jacob\r\n            </h1>\r\n            <p>\r\n              Currently I'm a senior <a href=\"https://cse.msu.edu/About/\">Computer Science Engineering</a> major with\r\n              a minor in <a href=\"https://cogsci.msu.edu/\">Cognitive Science</a> at Michigan State.\r\n              My first experience with programming was using Dev-C++ in high school. It enjoyed it but I decided to go with\r\n              Mechanical Engineering as my initial major, with a minor in CSE. I enjoyed CADD and thought ME would suit me.\r\n              However, once I got into the junior-level courses at MSU I realized how boring ME really was.\r\n              Thus, I switched my major to CSE, dropped ME, and picked up my new minor. The switch re-ignited my\r\n              passion for programming and I haven't looked back since. Additionally, it let me explore the emerging field\r\n              of cognitive science which had peaked my interest for awhile.\r\n            </p>\r\n            <p>\r\n              You see, intelligence fascinates me and I wanted to understand it from both technical and biological\r\n              perspectives to better comprehend the phenomena and how it can be used to innovate our society. Not only do I believe\r\n              understanding intelligence (and the brain as a whole) unlocks the next generation of technology,\r\n              I also believe understanding it will better our relationships with ourselves and with others.\r\n              Naturally, my interests led to me to explore the fields on machine learning and artificial intelligence.\r\n              My first experience of which was Andrew Ng's <a href=\"https://www.coursera.org/learn/machine-learning\">\r\n              Stanford Machine Learning Course</a>. I loved the course and wanted to learn more so since then I've taken\r\n              2 more ML/AI courses, and enrolled in a few others for this upcoming year. CSE404 Machine Learning,\r\n              <a href=\"https://www.coursera.org/specializations/deep-learning\"> Deep Learning Specialization </a> and\r\n              CSE 891 Computational Foundations of AI, CSE 891 Genetic Programming respectively.\r\n            </p>\r\n            <p>\r\n              So far, my work journey has taken me through many fields including R&D, Energy, and Food & Drink and many\r\n              different roles. Through all the experience I've learned how to be adaptable, efficient and a quick learner.\r\n              I get heavily invested in my projects while approaching them with a minimalistic and long-term mindset.\r\n              What's the simplest way to achieve the end goal? How can I break down this project into digestible pieces?\r\n              How will this project's capabilities be extended and supported throughout it's lifetime and what's the\r\n              optimal way to write it so long-term support is viable? I attempt hold these questions in mind when exploring\r\n              a new project. You can explore my previous projects and work experience below.\r\n            </p>\r\n            <p>\r\n              In my free-time I enjoy playing rugby, video games, reading and working out. Additionally,\r\n              I am the Vice President of the <a href=\"https://www.michiganstaterugby.com/\"> Men's Rugby Club </a>\r\n              at MSU where I've met many great friends and have made even more memories. I appreciate you taking the time\r\n              to get to know me, have a good one, Jacob.\r\n            </p>\r\n            <span className='d-flex'>\r\n              <a className='btn btn-outline-main text-uppercase' href={Resume}\r\n                rel=\"noopener noreferrer\" target='_blank'\r\n              >\r\n                Resume <i class=\"bi bi-chevron-right\"></i>\r\n              </a>\r\n            </span>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </section>\r\n  );\r\n}\r\n\r\nexport default About;","import React, { Fragment, useState } from 'react';\r\n\r\nconst WorkItem = (props) => {\r\n  const [collapse, setCollapse] = useState(true);\r\n\r\n  return (\r\n    <div className='col-6 mb-5'>\r\n      <h3 className='title'>{props.title}</h3>\r\n      <h5 className='subtitle'>{props.subtitle}</h5>\r\n      <button className='btn btn-main py-1 px-2' type='button' data-toggle='collapse' \r\n        data-target={`#${props.id}`} aria-expanded='false' \r\n        aria-controls={props.id} onClick={() => setCollapse(!collapse)}\r\n        title='Read more'\r\n      >\r\n        { collapse &&\r\n          <Fragment>\r\n            Read more <i class=\"bi bi-chevron-down\"></i>\r\n          </Fragment>\r\n        }\r\n        { !collapse &&\r\n          <Fragment>\r\n            Read less <i class=\"bi bi-chevron-up\"></i>\r\n          </Fragment>\r\n        }\r\n      </button>\r\n      <div id={props.id} className='collapse mt-3'>\r\n        <p className='text-second mb-2'>\r\n          {props.description}\r\n        </p>\r\n\r\n        { props.link &&\r\n          <span className='d-flex'>\r\n            <a className='btn btn-outline-main text-uppercase' href={props.link} \r\n              rel=\"noopener noreferrer\" target='_blank'\r\n            >\r\n              See it here <i class=\"bi bi-chevron-right\"></i>\r\n            </a>\r\n          </span>\r\n        }\r\n        <nav className='nav text-uppercase text-second font-weight-bold'\r\n        >\r\n          {props.tech.map((item, index) => {\r\n            return (\r\n              <p  key={index} className='nav-link ms-0'>{item}</p>\r\n            )\r\n          })}\r\n        </nav>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\nexport default WorkItem;","import React from 'react';\r\nimport WorkItem from './WorkItem';\r\n\r\nconst Work = () => {\r\n  return (\r\n    <section id='Work' className='container d-flex align-items-center'>\r\n      <div className='w-100'>\r\n        <h1 className='title title-accent display-5'>\r\n          Work Experience & Projects\r\n        </h1>\r\n        <div className='row'>\r\n        </div>\r\n        <div className='row mt-5'>\r\n          <WorkItem \r\n            title={'Customer Care Support Platform'}\r\n            subtitle={'Data Analytics Intern \\n Supply Chain Analytics \\n Mars Incorporated, Summer \\'21'}\r\n            id={'Mars'}\r\n            description={'Problem: The Customer Care team within the German Market supply chain group were receiving thousands of emails per week. ' +\r\n            'The emails were generally from retailer or Mom&Pop customers concerning a variety of issues... availability, missing items, order confirmation, etc.' +\r\n            ' Due to the amount of traffic, it was impossible for the associates to answer the most important emails on time. ' +\r\n            'Thus, they came to our team (SCA) in order to find a solution which would cut down on time spent answering emails ' +\r\n            'and figuring out which needed responses first. \\n\\n Solution: I created a Dash app which allowed users to upload emails in bulk. ' +\r\n            'The application used an sklearn pipeline consisting of my own text cleansing function built specifically for emails, a TF-IDF vectorizer, ' +\r\n            'and an SGD Classifier model (w/ hinge loss) to classify the email into one of seven categories. From there the email would ' +\r\n            'be post-processed specifically for it\\'s category. I.E. an email about availability would be scraped for item codes. The item ' +\r\n            'codes would be fed through specific databases hosted in various platforms (Azure Data lake, SAP, Power BI) where the stock information ' +\r\n            'about said item could be found. Then, the collected information was amalgamated and formatted into an email draft which the user could download and review ' +\r\n            'before sending out. In theory this solution, if fully implemented, could save associates over 500+ hours per week in answering emails. ' +\r\n            'This solution worked as a symbiotic tool so associate/customer behavior did not have to change while not invading privacy ' +\r\n            'of our associates inboxes. Additionally, it avoided a lot of unnecessary bureaucratic time sinks which would delay development in an already short window. '}\r\n            tech={['Python', 'NLP', 'Text Classification', 'Machine Learning', 'Dash', 'Data Science', 'Data Engineering']}\r\n          />\r\n          <WorkItem \r\n            title={'CSE 331: Algorithms & Data Structures'}\r\n            subtitle={'Teaching Assistant - Project Co-Lead \\n MSU College of Engineering, \\'21-Present'}\r\n            id={'CSE331'}\r\n            description={'CSE 331 is one the most vital courses for any MSU student pursuing a career involving programming. ' +\r\n            'Not only does this course teach fundamental DS/Algorithms but we also explain and enforce the concepts of time and space ' +\r\n            'complexity. As a team we setup coding challenges, projects and exams to guide the student along their journey where ' +\r\n            'we aim for them to be able to find optimal solutions, understanding when and when not to use a data structure, and' +\r\n            'what makes a great algorithm. ' +\r\n            '\\n\\nIn the role of a Project Co-lead, I have the responsibility of curating the projects in a way that makes ' +\r\n            'the implementation of the data structures and algorithms feel intuitive. Through the intuition and applications, ' +\r\n            'it\\'s easier to explain the necessity of a data structure. Generally, each project revolves around ' +\r\n            'the implementation of one structure and an application of it. \\n\\nAs a Teaching Assistant, I host weekly helproom hours' +\r\n            'where I get to work one on one with students for two hours to explain concepts and get feedback about the course. So far' +\r\n            ' I\\'ve created coding challenges around hash tables and path finding (BFS/DFS/Dijkstra). The class is in Python. '}\r\n            tech={['Python', 'Storytelling', 'Teaching', 'Communication', 'Team']}\r\n          />\r\n          <WorkItem \r\n            title={'Power Plant Live Data Visualization'}\r\n            subtitle={'I&C Engineering Intern \\n Monroe Power Plant \\n DTE Energy, Summer \\'20'}\r\n            id={'MPP'}\r\n            description={'Problem: The unit engineers at the Monroe Power Plant hold daily meetings about the status of the plant. In each' +\r\n            'meeting they go through checks of various data about each unit to ensure everything is running normal. Checks about' +\r\n            'temperatures, pressures, flow rates and more for all the components in a unit. This data is collected through' +\r\n            'PLC software that isn\\'t user friendly. The engineers needed a way to better track and analyze this data so ' +\r\n            'they didnt have to spend as much time going through it. \\n\\n Solution: With two other interns, we created a data ' +\r\n            'pipeline which extracted the information from the PLC side, cleansed, added and graphed it in Excel. Other plant ' +\r\n            'data was already being tracked and displayed using excel so it was the simplest and most user-friendly solution. '}\r\n            tech={['Excel', 'Data Engineering', 'Data Visualization', 'Team']}\r\n          />\r\n          <WorkItem\r\n            title={'Physical and Chemical Vapor Deposition Systems'}\r\n            subtitle={'Systems Engineering Intern \\n Fraunhofer USA CCD, \\'18-\\'20'}\r\n            id={'Fraunhofer'}\r\n            description={'During my tenure at Fraunhofer, I worked on almost every system in the building. My main system ' +\r\n            'was known as DS10 (short for Diamond System 10), which was the newest generation of diamond system there and a ' +\r\n            'microwave plasma-assisted CVD machine.'+\r\n            ' My contributions consisted of mechanical, electrical and software development on it. Since I\\'m now a computer' +\r\n            ' science student I speak mainly of the latter part of my contributions. However, I spent an excessive amount of time' +\r\n            ' working on that machine and could speak on any of those aspects of it for an equally excessive amount of time. ' +\r\n            'Unfortunately, I left before the machine ever reached production status. However, we were able to achieve plasma ' +\r\n            'and have several thin film growth trials which resulted in polycrystalline growth which was cool to see. ' +\r\n            '\\n\\n This project shaped a lot of who I am as an engineer, a developer and probably as a person. My former bosses, ' +\r\n            ' Jan and Brandon taught me about the fundamental principles of safety, creativity, work ethic, continuous learning, and more ' +\r\n            ' that are required of you to be a great engineer. I owe a great deal to them and cannot thank them enough for their ' +\r\n            'guidance and patience with my growth from a stupid freshman to a slightly less stupid junior. There isn\\'t enough room' +\r\n            ' nor enough energy in my body to type everything I learned, accomplished, broke, fixed, discovered in that lab nor enough words to' +\r\n            ' convey everything I found out about life from all those I worked with there. Maybe one day someone will clean up the mezzanine.' +\r\n            ' '}\r\n            tech={['TwinCAT', 'LabVIEW', 'Visual Studio', 'Engineering', 'Safety', 'Project Management', 'Documentation', 'Life']}\r\n          />\r\n          <WorkItem\r\n            title={'Balloons Tower Defense Remake'}\r\n            subtitle={'Student \\n CSE 335: OOP Software Development'}\r\n            id={'CSE335'}\r\n            description={'For one of the two projects of the class, we were tasked with recreating the popular mobile game ' +\r\n            'Balloon Towers Defense from near scratch. \\n https://ninjakiwi.com/Games/Tower-Defense/Bloons-Tower-Defense-5.html \\n ' +\r\n            'With a team of four other students, over the course of a month, we recreated the game functionally including our own ' +\r\n            'unique level, four unique towers, and two types of balloons. The game also included a scoring system. In doing so ' +\r\n            'we received a group grade of 100%, and I received an individual grade of 100%. We used agile' +\r\n            ' development techniques such as stand-ups, scrums, iterative development, etc. through the Trello platform. The ' +\r\n            'game was written in C++ and utilized an object oriented modeling approach. Thus, we often drew out UML diagrams for our ' +\r\n            'game using paradigm to understand how our classes would be setup and interact before writing code. '}\r\n            tech={['C++', 'Agile', 'Team', 'Object-Oriented Modeling', 'Software development', 'Trello', 'UML', 'Paradigm']}\r\n          />\r\n          <WorkItem\r\n            title={'Discord Chat Bot'}\r\n            subtitle={'Personal Project'}\r\n            id={'Discord'}\r\n            description={'I created a discord chat bot first in javascript, then in python because I liked the python api better. ' +\r\n            'The bot is command and event triggered. It will scrape messages for key words which trigger responses. Additionally, ' +\r\n            'anyone in the chat can append to its vocabulary such that you can tell the bot what you want it to say when a certain word ' +\r\n            'is said in chat. On user entrance events into a voice channel, it will play an audio clip depending on the user. ' +\r\n            'It has other commands such as chat cleansing (deleting messages fitting a criteria from a text channel) and playing ' +\r\n            'audio clips on command. I have future plans for extending its capabilities.'}\r\n            tech={['JavaScript', 'Python', 'Fun']}\r\n          />\r\n        </div>\r\n        <span className='d-flex'>\r\n          <a className='btn btn-outline-main text-uppercase' \r\n            href='https://github.com/caurdy/' rel=\"noopener noreferrer\"\r\n            target='_blank'\r\n          >\r\n            Personal Github <i class=\"bi bi-chevron-right\"></i>\r\n          </a>\r\n        </span>\r\n      </div>\r\n    </section>\r\n  );\r\n}\r\n\r\nexport default Work;","import React from 'react';\r\nimport Resume from './assets/Resume.pdf';\r\n\r\nconst Contact = () => {\r\n  return (\r\n    <section id='Contact' className='container d-flex align-items-center'>\r\n      <div className='w-100 text-center'>\r\n        <h1 className='title display-5'>\r\n          <span className='title-accent'>Contact Me</span>\r\n        </h1>\r\n        <h4 className='subtitle'>\r\n          Interested in any full-time roles utilizing ML/AI technology\r\n        </h4>\r\n        <div className='row text-uppercase mt-5 pt-5'>\r\n          <div className='col'>\r\n            <a href='https://www.linkedin.com/in/jacob-caurdy/'\r\n               rel=\"noopener noreferrer\"\r\n              className='h5'\r\n            >\r\n              LinkedIn\r\n            </a>\r\n          </div>\r\n          <div className='col'>\r\n            <a href='mailto:caurdyja@msu.edu' className='h5'>Email</a>\r\n          </div>\r\n          <div className='col'>\r\n            <a href={Resume} className='h5'\r\n              title=\"Download Resume.pdf\"\r\n            >\r\n              Resume\r\n            </a>\r\n          </div>\r\n          <div className='col'>\r\n            <a href=\"https://www.egr.msu.edu/seescholars/scholars/jacob-caurdy\" className='h5'>\r\n              SEE Scholar Bio\r\n            </a>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </section>\r\n  );\r\n}\r\n\r\nexport default Contact;","import { FaBars } from 'react-icons/fa';\r\nimport { NavLink as Link } from 'react-router-dom';\r\nimport styled from 'styled-components';\r\n\r\nexport const Nav = styled.nav`\r\n  background: #2db92d;\r\n  height: 85px;\r\n  display: flex;\r\n  justify-content: space-between;\r\n  padding: 0.2rem calc((100vw - 1000px) / 2);\r\n  z-index: 12;\r\n  /* Third Nav */\r\n  /* justify-content: flex-start; */\r\n`;\r\n\r\nexport const NavLink = styled(Link)`\r\n  color: #808080;\r\n  display: flex;\r\n  align-items: center;\r\n  text-decoration: none;\r\n  padding: 0 1rem;\r\n  height: 100%;\r\n  cursor: pointer;\r\n  &.active {\r\n    color: #000000;\r\n  }\r\n`;\r\n\r\nexport const Bars = styled(FaBars)`\r\n  display: none;\r\n  color: #808080;\r\n  @media screen and (max-width: 768px) {\r\n    display: block;\r\n    position: absolute;\r\n    top: 0;\r\n    right: 0;\r\n    transform: translate(-100%, 75%);\r\n    font-size: 1.8rem;\r\n    cursor: pointer;\r\n  }\r\n`;\r\n\r\nexport const NavMenu = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  margin-right: -24px;\r\n  /* Second Nav */\r\n  /* margin-right: 24px; */\r\n  /* Third Nav */\r\n  /* width: 100vw;\r\n  white-space: nowrap; */\r\n  @media screen and (max-width: 768px) {\r\n    display: none;\r\n  }\r\n`;\r\n\r\nexport const NavBtn = styled.nav`\r\n  display: flex;\r\n  align-items: center;\r\n  margin-right: 24px;\r\n  /* Third Nav */\r\n  /* justify-content: flex-end;\r\n  width: 100vw; */\r\n  @media screen and (max-width: 768px) {\r\n    display: none;\r\n  }\r\n`;\r\n\r\nexport const NavBtnLink = styled(Link)`\r\n  border-radius: 4px;\r\n  background: #808080;\r\n  padding: 10px 22px;\r\n  color: #000000;\r\n  outline: none;\r\n  border: none;\r\n  cursor: pointer;\r\n  transition: all 0.2s ease-in-out;\r\n  text-decoration: none;\r\n  /* Second Nav */\r\n  margin-left: 24px;\r\n  &:hover {\r\n    transition: all 0.2s ease-in-out;\r\n    background: #fff;\r\n    color: #808080;\r\n  }\r\n`;","import React from 'react';\r\nimport {\r\n  Nav,\r\n  NavLink,\r\n  Bars,\r\n  NavMenu,\r\n  NavBtn,\r\n} from './NavbarElements';\r\n\r\nconst Navbar = () => {\r\n  return (\r\n    <>\r\n      <Nav>\r\n        <Bars />\r\n        <NavBtn>\r\n        <button className='btn btn-toggle' type='button'\r\n                title='Toggle Dark Mode'>\r\n          <i className=\"bi bi-brightness-high-fill\"></i>\r\n        </button>\r\n        </NavBtn>\r\n        <NavMenu>\r\n          <NavLink to='/Intro' activeStyle>\r\n            Intro\r\n          </NavLink>\r\n          <NavLink to='/About' activeStyle>\r\n            About\r\n          </NavLink>\r\n          <NavLink to='/Work' activeStyle>\r\n            Work & Projects\r\n          </NavLink>\r\n          <NavLink to='/Contact' activeStyle>\r\n            Contact\r\n          </NavLink>\r\n        </NavMenu>\r\n      </Nav>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Navbar;","import React, { Component } from 'react';\r\nimport './App.css';\r\nimport Home from '.';\r\nimport Intro from './Intro';\r\nimport About from './About';\r\nimport Work from './Work';\r\nimport Contact from './Contact';\r\nimport NavBar from './navbar';\r\nimport toggleDarkMode from './darkMode';\r\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\r\n\r\nexport default class App extends Component {\r\n  componentDidMount() {\r\n    toggleDarkMode();\r\n  }\r\n  \r\n  render() {\r\n    return (\r\n              <Router>\r\n                <NavBar />\r\n                <Switch>\r\n                    {/*<Route path='.' component={Home} />*/}\r\n                    <Route path='/Intro' component={Intro} />\r\n                    <Route path='/About' component={About} />\r\n                    <Route path='/Work' component={Work} />\r\n                    <Route path='/Contact' component={Contact} />\r\n                </Switch>\r\n              </Router>\r\n    );\r\n  }\r\n}\r\n","export default function toggleDarkMode() {\r\n  const btn = document.querySelector(\".btn-toggle\");\r\n  const prefersDarkScheme = window.matchMedia(\"(prefers-color-scheme: dark)\");\r\n\r\n  const currentTheme = localStorage.getItem(\"theme\");\r\n  if (currentTheme === \"dark\") {\r\n    document.body.classList.toggle(\"dark-theme\");\r\n    btn.innerHTML = '<i class=\"bi bi-sun\"></i>';\r\n  } else if (currentTheme === \"light\") {\r\n    document.body.classList.toggle(\"light-theme\");\r\n    btn.innerHTML = '<i class=\"bi bi-brightness-high-fill\"></i>';\r\n  }\r\n\r\n  btn.addEventListener(\"click\", function () {\r\n    let theme = \"\";\r\n    if (prefersDarkScheme.matches) {\r\n      document.body.classList.toggle(\"light-theme\");\r\n      theme = document.body.classList.contains(\"light-theme\")\r\n        ? \"light\"\r\n        : \"dark\";\r\n    } else {\r\n      document.body.classList.toggle(\"dark-theme\");\r\n      theme = document.body.classList.contains(\"dark-theme\")\r\n        ? \"dark\"\r\n        : \"light\";\r\n    }\r\n    if (btn.innerHTML === '<i class=\"bi bi-brightness-high-fill\"></i>') {\r\n      btn.innerHTML = '<i class=\"bi bi-sun\"></i>';\r\n    } else {\r\n      btn.innerHTML = '<i class=\"bi bi-brightness-high-fill\"></i>';\r\n    }\r\n    localStorage.setItem(\"theme\", theme);\r\n  });\r\n}","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './components/App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}