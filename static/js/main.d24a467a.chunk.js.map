{"version":3,"sources":["components/assets/Resume.pdf","components/Intro.js","components/About.js","components/WorkItem.js","components/Work.js","components/Contact.js","components/App.js","components/darkMode.js","serviceWorker.js","index.js"],"names":["module","exports","Intro","className","href","Resume","rel","target","About","id","class","WorkItem","props","useState","collapse","setCollapse","title","subtitle","type","data-toggle","data-target","aria-expanded","aria-controls","onClick","description","link","tech","map","item","index","key","Work","Contact","App","btn","document","querySelector","prefersDarkScheme","window","matchMedia","currentTheme","localStorage","getItem","body","classList","toggle","innerHTML","addEventListener","theme","matches","contains","setItem","toggleDarkMode","Component","Boolean","location","hostname","match","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.d24a467a.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/Resume.a48033f8.pdf\";","import React from 'react';\r\nimport Resume from './assets/Resume.pdf';\r\n\r\nconst Intro = () => {\r\n  return (\r\n    <section className='container d-flex align-items-center'>\r\n      <div className='w-100'>\r\n        <h1 className='title title-accent display-2'>Hey, I'm Sean Nguyen</h1>\r\n        <h1 className='subtitle'>\r\n          Student Software & Web Developer\r\n        </h1>\r\n        <nav className='nav text-uppercase h5'>\r\n          <a className='nav-link ms-0' href='#About'>About</a>\r\n          <a className='nav-link' href='#Work'>Work</a>\r\n          <a className='nav-link' href='#Contact'>Contact</a>\r\n          <a className='nav-link' href={Resume} \r\n            rel='noopener noreferrer' target='_blank'\r\n          >\r\n            Resume\r\n          </a>\r\n        </nav>\r\n      </div>\r\n    </section>\r\n  );\r\n}\r\n\r\nexport default Intro;","import React from 'react';\r\nimport Resume from './assets/Resume.pdf';\r\n\r\nconst About = () => {\r\n  return (\r\n    <section id='About' className='container d-flex align-items-center'>\r\n      <div className='w-100'>\r\n        <div className='row'>\r\n          <div className='col-4 text-second'>\r\n            <h4 className='title d-flex align-items-center'>\r\n              <i class=\"bi bi-code-square me-2\"></i>\r\n              Programming and Querying\r\n            </h4>\r\n            <ul>\r\n              <li>C++</li>\r\n              <li>C#</li>\r\n              <li>Java</li>\r\n              <li>Python</li>\r\n              <li>Visual Basic</li>\r\n              <li>SQL (MySQL, PostgreSQL)</li>\r\n            </ul>\r\n\r\n            <h4 className='title d-flex align-items-center'>\r\n              <i class=\"bi bi-layout-text-window-reverse me-2\"></i>\r\n              Web\r\n            </h4>\r\n            <ul>\r\n              <li>HTML</li>\r\n              <li>CSS (Bootstrap, Bulma, Tailwind)</li>\r\n              <li>JavaScript (jQuery, React, Angular, Aurelia)</li>\r\n              <li>TypeScript</li>\r\n              <li>PHP</li>\r\n            </ul>\r\n\r\n            <h4 className='title d-flex align-items-center'>\r\n              <i class=\"bi bi-terminal me-2\"></i>\r\n              Technologies and Skills\r\n            </h4>\r\n            <ul>\r\n              <li>Git</li>\r\n              <li>Linux</li>\r\n              <li>CLI/Bash</li>\r\n              <li>Azure DevOps</li>\r\n              <li>Jira</li>\r\n              <li>Jenkins</li>\r\n            </ul>\r\n          </div>\r\n        \r\n          <div className='col-8'>\r\n            <h1 className='title title-accent display-5'>\r\n              I'm a 4th year computer science student\r\n            </h1>\r\n            <p>\r\n              Currently studying at Michigan State University. Self-motivated \r\n              and passionate, I take my studies very seriously while also \r\n              looking for new opportunities where I can apply myself.\r\n            </p>\r\n            <p>\r\n              I have had a couple of formal internships and experiences, where\r\n              I've been able to implement what I have learned. During the school\r\n               year, I tutor or work with professors, not only to help other\r\n              students learn, but to also test my own understandings of\r\n              computer science concepts.\r\n            </p>\r\n            <p>\r\n              On my own time, I try and teach myself what school and work \r\n              doesn't, which has resulted in small projects that have either \r\n              amused my friends or have actually come out to be quite useful.\r\n            </p>\r\n            <p>\r\n              I am focused on my solutions being efficient and adaptable. I'm\r\n              always learning and am ready to make mistakes and improve myself. \r\n              Ultimately, I'm aiming to become a developer whose work I can take \r\n              pride in and can inspire others.\r\n            </p>\r\n            <span className='d-flex'>\r\n              <a className='btn btn-outline-main text-uppercase' href={Resume}\r\n                rel=\"noopener noreferrer\" target='_blank'\r\n              >\r\n                Resume <i class=\"bi bi-chevron-right\"></i>\r\n              </a>\r\n            </span>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </section>\r\n  );\r\n}\r\n\r\nexport default About;","import React, { Fragment, useState } from 'react';\r\n\r\nconst WorkItem = (props) => {\r\n  const [collapse, setCollapse] = useState(true);\r\n\r\n  return (\r\n    <div className='col-4 mb-5'>\r\n      <h3 className='title'>{props.title}</h3>\r\n      <h5 className='subtitle'>{props.subtitle}</h5>\r\n      <button className='btn btn-main py-1 px-2' type='button' data-toggle='collapse' \r\n        data-target={`#${props.id}`} aria-expanded='false' \r\n        aria-controls={props.id} onClick={() => setCollapse(!collapse)}\r\n        title='Read more'\r\n      >\r\n        { collapse &&\r\n          <Fragment>\r\n            Read more <i class=\"bi bi-chevron-down\"></i>\r\n          </Fragment>\r\n        }\r\n        { !collapse &&\r\n          <Fragment>\r\n            Read less <i class=\"bi bi-chevron-up\"></i>\r\n          </Fragment>\r\n        }\r\n      </button>\r\n      <div id={props.id} className='collapse mt-3'>\r\n        <p className='text-second mb-2'>\r\n          {props.description}\r\n        </p>\r\n\r\n        { props.link &&\r\n          <span className='d-flex'>\r\n            <a className='btn btn-outline-main text-uppercase' href={props.link} \r\n              rel=\"noopener noreferrer\" target='_blank'\r\n            >\r\n              See it here <i class=\"bi bi-chevron-right\"></i>\r\n            </a>\r\n          </span>\r\n        }\r\n        <nav className='nav text-uppercase text-second font-weight-bold'\r\n        >\r\n          {props.tech.map((item, index) => {\r\n            return (\r\n              <p  key={index} className='nav-link ms-0'>{item}</p>\r\n            )\r\n          })}\r\n        </nav>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\nexport default WorkItem;","import React from 'react';\r\nimport WorkItem from './WorkItem';\r\n\r\nconst Work = () => {\r\n  return (\r\n    <section id='Work' className='container d-flex align-items-center'>\r\n      <div className='w-100'>\r\n        <h1 className='title title-accent display-5'>\r\n          Work & Projects\r\n        </h1>\r\n        <div className='row'>\r\n        </div>\r\n        <div className='row mt-5'>\r\n          <WorkItem \r\n            title={'Data Refresh Solution'}\r\n            subtitle={'Ally Financial, 2021'}\r\n            id={'DataRefresh'}\r\n            description={'Every data refresh breaks functionality in several tools used within the test automation team, and the loss of functionality has always been realized at critical times. There are a series of manual steps taken to restore functionality, but these steps took hours, and worst case, days to accomplish. I was tasked with finding a solution to this problem. I decided to automate these steps using a Jenkins job and scripts, which generate new data to fix the tools, adds the data into the tools\\' codebase, and automatically create a pull request for the team to approve the automated changes. The automated process takes a minute at maximum.'}\r\n            tech={['Jenkins', 'Groovy', 'BASH', 'Python']}\r\n          />\r\n          <WorkItem \r\n            title={'CSE 331 Coursework'}\r\n            subtitle={'MSU College of Engineering, 2021'}\r\n            id={'CSE331'}\r\n            description={'As an undergraduate learning assistant for CSE 331: Data Structures and Algorithms, I was tasked with creating homework assignments and projects for students to create a solution for. These projects\\' difficulties needed to scale with the students\\' learning and could not be too difficult. I created a handful of projects, most notable were an optimized hybrid sort using merge sort and insertion sort, using a trie to index and search for specific terms, and creating a graph implementation.'}\r\n            tech={['Python']}\r\n          />\r\n          <WorkItem \r\n            title={'MEI'}\r\n            subtitle={'Gentex Corporation, 2020'}\r\n            id={'MEI'}\r\n            description={'Stands for Manufacturing Execution Interface. MEI is used by factory operators to track and process operations for jobs, which ultimately create parts. While my time at Gentex led me to add small features and fix bugs, my biggest contribution to MEI was the addition of the defect location tracker. Should a part be defective, operators can log and mark the defect on the part and scrap it. The defect locations are stored in their own database table, and can be pulled for reporting reasons.'}\r\n            tech={['TypeScript', 'Aurelia', 'CSS', 'Bootstrap', 'SQL']}\r\n          />\r\n          <WorkItem \r\n            title={'MES Web'}\r\n            subtitle={'Gentex Corporation, 2020'}\r\n            id={'MESWeb'}\r\n            description={'An app used internally by Gentex to view and pull data from Industrial, Manufacturing, and Business happenings within the company. With this app, I was mostly tasked with fixing bugs, adding columns to tables, and adding inputs to forms. I have built a few forms where operators can issue or return items by a specific operation code they belong to.'}\r\n            tech={['C#', 'JavaScript', 'JQuery', 'CSS', 'Material-UI', 'SQL']}\r\n          />\r\n          <WorkItem \r\n            title={'MSU Sports Camps'}\r\n            subtitle={'MSU RHS IS, 2020'}\r\n            id={'SportsCamps'}\r\n            description={'A website where people can view and sign up for Michigan State sport camps that are open for sign up during the summer, bringing in near a million dollars in revenue for sport camps each year. On the backend, admins and coaches can edit season information, edit camps, and manually process camp orders. My project was to help revamp the frontend to create a more appealing and comfortable user experience. On the backend, I added a few new features, such as coaches can add documents and forms for people to download, admins can update notices, and updated report exports for people who\\'ve signed up for camps.'}\r\n            tech={['PHP', 'JavaScript', 'JQuery', 'CSS', 'PostgreSQL']}\r\n            link='https://www.sportcamps.msu.edu/'\r\n          />\r\n          <WorkItem \r\n            title={'Service Portal'}\r\n            subtitle={'MSU RHS IS, 2018'}\r\n            id={'ServicePortal'}\r\n            description={'A webapp where service desk workers at MSU\\'s residential halls can log and track relevant information for residents. It is used in every hall on campus. Most notably incoming packages are dropped off at the service desk, where they will be logged and Service Portal will notify residents through email that their package has arrived. Residents may also borrow items, such as keys and access cards, from the desk, which the app will also track and notify residents if their item is overdue for return. My contributions were implementing and maintaining the package and item loan features. Also as the lead student developer, I oversaw and reviewed features such as resident lookup and tracking.'}\r\n            tech={['PHP', 'JavaScript', 'JQuery', 'CSS', 'Bootstrap', 'PostgreSQL']}\r\n          />\r\n          <WorkItem \r\n            title={'Monies'}\r\n            subtitle={'Personal, 2020'}\r\n            id={'Monies'}\r\n            description={'A webapp where users can put in categorized, monthly expenses and estimated incomes and calculate the amount of money they have leftover each month to budget out. Users may see a percentage breakdown of their expenses, and set a goal amount to save towards, which will then return how long it\\'ll take to save that goal. Users can also add their own custom expenses. A fun project where I tried to teach myself React Hooks while create a potentially useful app.'}\r\n            tech={['JavaScript', 'React', 'CSS', 'Bootstrap']}\r\n            link='https://senguyen1011.github.io/monies/'\r\n          />\r\n          <WorkItem \r\n            title={'MechKeys'}\r\n            subtitle={'Personal, 2020'}\r\n            id={'MechKeys'}\r\n            description={'A webapp where users can search and view mechanical keyboards. Keyboards can be searched for by name and form factor. More keyboards are planned to be added, as well as a page for searching for keyboard switches. A small proof-of-concept project to learn Angular, create services, and use API calls.'}\r\n            tech={['JavaScript', 'Angular', 'CSS', 'Bootstrap']}\r\n            link='https://senguyen1011.github.io/mechkeys/mech'\r\n          />\r\n        </div>\r\n        <span className='d-flex'>\r\n          <a className='btn btn-outline-main text-uppercase' \r\n            href='https://github.com/senguyen1011' rel=\"noopener noreferrer\" \r\n            target='_blank'\r\n          >\r\n            Personal Github <i class=\"bi bi-chevron-right\"></i>\r\n          </a>\r\n        </span>\r\n      </div>\r\n    </section>\r\n  );\r\n}\r\n\r\nexport default Work;","import React from 'react';\r\nimport Resume from './assets/Resume.pdf';\r\n\r\nconst Contact = () => {\r\n  return (\r\n    <section id='Contact' className='container d-flex align-items-center'>\r\n      <div className='w-100 text-center'>\r\n        <h1 className='title display-5'>\r\n          <span className='title-accent'>Contact Me</span>\r\n        </h1>\r\n        <h4 className='subtitle'>\r\n          Looking for internships & co-ops\r\n        </h4>\r\n        <div className='row text-uppercase mt-5 pt-5'>\r\n          <div className='col'>\r\n            <a href='https://www.linkedin.com/in/sean-nguyen-756736166/'\r\n              className='h5'\r\n            >\r\n              LinkedIn\r\n            </a>\r\n          </div>\r\n          <div className='col'>\r\n            <a href='mailto:nguye610@msu.edu' className='h5'>Email</a>\r\n          </div>\r\n          <div className='col'>\r\n            <a href={Resume} className='h5'\r\n              title=\"I know, this is the third place I've put my resume. I'm sorry, please hire me.\"\r\n            >\r\n              Resume\r\n            </a>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </section>\r\n  );\r\n}\r\n\r\nexport default Contact;","import React, { Component, Fragment } from 'react';\r\nimport './App.css';\r\nimport Intro from './Intro';\r\nimport About from './About';\r\nimport Work from './Work';\r\nimport Contact from './Contact';\r\nimport toggleDarkMode from './darkMode';\r\n\r\nexport default class App extends Component {\r\n  componentDidMount() {\r\n    toggleDarkMode();\r\n  }\r\n  \r\n  render() {\r\n    return (\r\n      <Fragment>\r\n        <button className='btn btn-toggle' type='button' \r\n          title='Toggle Dark Mode'\r\n        >\r\n          <i class=\"bi bi-brightness-high-fill\"></i>\r\n        </button>\r\n        <Intro />\r\n        <About />\r\n        <Work />\r\n        <Contact />\r\n      </Fragment> \r\n    );\r\n  }\r\n}\r\n","export default function toggleDarkMode() {\r\n  const btn = document.querySelector(\".btn-toggle\");\r\n  const prefersDarkScheme = window.matchMedia(\"(prefers-color-scheme: dark)\");\r\n\r\n  const currentTheme = localStorage.getItem(\"theme\");\r\n  if (currentTheme === \"dark\") {\r\n    document.body.classList.toggle(\"dark-theme\");\r\n    btn.innerHTML = '<i class=\"bi bi-sun\"></i>';\r\n  } else if (currentTheme === \"light\") {\r\n    document.body.classList.toggle(\"light-theme\");\r\n    btn.innerHTML = '<i class=\"bi bi-brightness-high-fill\"></i>';\r\n  }\r\n\r\n  btn.addEventListener(\"click\", function () {\r\n    let theme = \"\";\r\n    if (prefersDarkScheme.matches) {\r\n      document.body.classList.toggle(\"light-theme\");\r\n      theme = document.body.classList.contains(\"light-theme\")\r\n        ? \"light\"\r\n        : \"dark\";\r\n    } else {\r\n      document.body.classList.toggle(\"dark-theme\");\r\n      theme = document.body.classList.contains(\"dark-theme\")\r\n        ? \"dark\"\r\n        : \"light\";\r\n    }\r\n    if (btn.innerHTML === '<i class=\"bi bi-brightness-high-fill\"></i>') {\r\n      btn.innerHTML = '<i class=\"bi bi-sun\"></i>';\r\n    } else {\r\n      btn.innerHTML = '<i class=\"bi bi-brightness-high-fill\"></i>';\r\n    }\r\n    localStorage.setItem(\"theme\", theme);\r\n  });\r\n}","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './components/App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}